{"ast":null,"code":"var _jsxFileName = \"/project/notion-clone/components/layout/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport { UserStateContext } from \"../../context/UserContext\";\nimport Button from \"../button\";\nimport ContextMenu from \"../contextMenu\";\nimport styles from \"./styles.module.scss\";\nimport GithubIcon from \"../../images/github.svg\";\nimport UserIcon from \"../../images/user.svg\";\n\nconst Layout = ({\n  children\n}) => {\n  const router = useRouter();\n  const state = useContext(UserStateContext);\n  const {\n    0: isContextMenuOpen,\n    1: setIsContextMenuOpen\n  } = useState(false);\n  const isLoginPage = router.pathname === \"/login\";\n  const isAuth = state.isAuth;\n\n  const toggleContextMenu = () => {\n    setIsContextMenuOpen(!isContextMenuOpen);\n  };\n\n  const closeContextMenu = () => {\n    setIsContextMenuOpen(false);\n  };\n\n  const handleNavigation = path => {\n    closeContextMenu();\n    router.push(path);\n  };\n\n  return __jsx(\"div\", {\n    id: \"layoutRoot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Notion Clone\"), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/favicon.ico\",\n    type: \"image/x-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    type: \"image/x-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), __jsx(\"header\", {\n    className: styles.headerBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"/\",\n    role: \"link\",\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"notion\", __jsx(\"span\", {\n    style: {\n      fontSize: \"1.25rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, \".clone\"))), __jsx(\"nav\", {\n    className: styles.nav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, !isLoginPage && !isAuth && __jsx(Button, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 39\n    }\n  }, \"Login\"), !isLoginPage && isAuth && __jsx(\"div\", {\n    className: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onClick: () => toggleContextMenu(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: UserIcon,\n    alt: \"User Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }))), !isLoginPage && isAuth && isContextMenuOpen && __jsx(ContextMenu, {\n    menuItems: [{\n      id: \"pages\",\n      label: \"Pages\",\n      action: () => handleNavigation(\"/pages\")\n    }, {\n      id: \"account\",\n      label: \"Account\",\n      action: () => handleNavigation(\"/account\")\n    }, {\n      id: \"logout\",\n      label: \"Logout\",\n      action: () => handleNavigation(\"/logout\")\n    }],\n    closeAction: () => closeContextMenu(),\n    isTopNavigation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), __jsx(\"main\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, children), __jsx(\"footer\", {\n    className: styles.footerBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"hr\", {\n    className: styles.hr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/konstantinmuenster/notion-clone\",\n    rel: \"noopener noreferrer\",\n    role: \"link\",\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: GithubIcon,\n    alt: \"Github Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/project/notion-clone/components/layout/index.js"],"names":["useContext","useState","useRouter","Head","UserStateContext","Button","ContextMenu","styles","GithubIcon","UserIcon","Layout","children","router","state","isContextMenuOpen","setIsContextMenuOpen","isLoginPage","pathname","isAuth","toggleContextMenu","closeContextMenu","handleNavigation","path","push","headerBar","logo","fontSize","nav","user","id","label","action","content","footerBar","hr","github"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\n\nimport { UserStateContext } from \"../../context/UserContext\";\n\nimport Button from \"../button\";\nimport ContextMenu from \"../contextMenu\";\nimport styles from \"./styles.module.scss\";\nimport GithubIcon from \"../../images/github.svg\";\nimport UserIcon from \"../../images/user.svg\";\n\nconst Layout = ({ children }) => {\n  const router = useRouter();\n  const state = useContext(UserStateContext);\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n\n  const isLoginPage = router.pathname === \"/login\";\n  const isAuth = state.isAuth;\n\n  const toggleContextMenu = () => {\n    setIsContextMenuOpen(!isContextMenuOpen);\n  };\n\n  const closeContextMenu = () => {\n    setIsContextMenuOpen(false);\n  };\n\n  const handleNavigation = (path) => {\n    closeContextMenu();\n    router.push(path);\n  };\n\n  return (\n    <div id=\"layoutRoot\">\n      <Head>\n        <title>Notion Clone</title>\n        <link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\n      </Head>\n      <header className={styles.headerBar}>\n        <div className={styles.logo}>\n          <a href=\"/\" role=\"link\" tabIndex=\"0\">\n            notion<span style={{ fontSize: \"1.25rem\" }}>.clone</span>\n          </a>\n        </div>\n        <nav className={styles.nav}>\n          {!isLoginPage && !isAuth && <Button href=\"/login\">Login</Button>}\n          {!isLoginPage && isAuth && (\n            <div className={styles.user}>\n              <span\n                role=\"button\"\n                tabIndex=\"0\"\n                onClick={() => toggleContextMenu()}\n              >\n                <img src={UserIcon} alt=\"User Icon\" />\n              </span>\n            </div>\n          )}\n          {!isLoginPage && isAuth && isContextMenuOpen && (\n            <ContextMenu\n              menuItems={[\n                {\n                  id: \"pages\",\n                  label: \"Pages\",\n                  action: () => handleNavigation(\"/pages\"),\n                },\n                {\n                  id: \"account\",\n                  label: \"Account\",\n                  action: () => handleNavigation(\"/account\"),\n                },\n                {\n                  id: \"logout\",\n                  label: \"Logout\",\n                  action: () => handleNavigation(\"/logout\"),\n                },\n              ]}\n              closeAction={() => closeContextMenu()}\n              isTopNavigation={true}\n            />\n          )}\n        </nav>\n      </header>\n      <main className={styles.content}>{children}</main>\n      <footer className={styles.footerBar}>\n        <hr className={styles.hr} />\n        <div className={styles.github}>\n          <a\n            href=\"https://github.com/konstantinmuenster/notion-clone\"\n            rel=\"noopener noreferrer\"\n            role=\"link\"\n            tabIndex=\"0\"\n          >\n            <img src={GithubIcon} alt=\"Github Icon\" />\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}