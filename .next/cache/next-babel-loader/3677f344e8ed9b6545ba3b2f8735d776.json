{"ast":null,"code":"var getCaretCoordinates = function getCaretCoordinates() {\n  var fromStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var x, y;\n  var isSupported = typeof window.getSelection !== \"undefined\";\n\n  if (isSupported) {\n    var selection = window.getSelection();\n\n    if (selection.rangeCount !== 0) {\n      var range = selection.getRangeAt(0).cloneRange();\n      range.collapse(fromStart ? true : false);\n      var rect = range.getClientRects()[0];\n\n      if (rect) {\n        x = rect.left;\n        y = rect.top;\n      }\n    }\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n};\n\nexport default getCaretCoordinates;","map":{"version":3,"sources":["/project/notion-clone/utils/getCaretCoordinates.js"],"names":["getCaretCoordinates","fromStart","x","y","isSupported","window","getSelection","selection","rangeCount","range","getRangeAt","cloneRange","collapse","rect","getClientRects","left","top"],"mappings":"AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAsB;AAAA,MAArBC,SAAqB,uEAAT,IAAS;AAChD,MAAIC,CAAJ,EAAOC,CAAP;AACA,MAAMC,WAAW,GAAG,OAAOC,MAAM,CAACC,YAAd,KAA+B,WAAnD;;AACA,MAAIF,WAAJ,EAAiB;AACf,QAAMG,SAAS,GAAGF,MAAM,CAACC,YAAP,EAAlB;;AACA,QAAIC,SAAS,CAACC,UAAV,KAAyB,CAA7B,EAAgC;AAC9B,UAAMC,KAAK,GAAGF,SAAS,CAACG,UAAV,CAAqB,CAArB,EAAwBC,UAAxB,EAAd;AACAF,MAAAA,KAAK,CAACG,QAAN,CAAeX,SAAS,GAAG,IAAH,GAAU,KAAlC;AACA,UAAMY,IAAI,GAAGJ,KAAK,CAACK,cAAN,GAAuB,CAAvB,CAAb;;AACA,UAAID,IAAJ,EAAU;AACRX,QAAAA,CAAC,GAAGW,IAAI,CAACE,IAAT;AACAZ,QAAAA,CAAC,GAAGU,IAAI,CAACG,GAAT;AACD;AACF;AACF;;AACD,SAAO;AAAEd,IAAAA,CAAC,EAADA,CAAF;AAAKC,IAAAA,CAAC,EAADA;AAAL,GAAP;AACD,CAhBD;;AAkBA,eAAeH,mBAAf","sourcesContent":["const getCaretCoordinates = (fromStart = true) => {\n  let x, y;\n  const isSupported = typeof window.getSelection !== \"undefined\";\n  if (isSupported) {\n    const selection = window.getSelection();\n    if (selection.rangeCount !== 0) {\n      const range = selection.getRangeAt(0).cloneRange();\n      range.collapse(fromStart ? true : false);\n      const rect = range.getClientRects()[0];\n      if (rect) {\n        x = rect.left;\n        y = rect.top;\n      }\n    }\n  }\n  return { x, y };\n};\n\nexport default getCaretCoordinates;\n"]},"metadata":{},"sourceType":"module"}