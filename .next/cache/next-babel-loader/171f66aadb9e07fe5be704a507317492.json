{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/project/notion-clone/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport EditablePage from \"../components/editablePage\"; // If a user hits \"/\", we create a blank page and redirect to that page\n// so that each user gets his/her personal space to test things\n\nvar IndexPage = function IndexPage(_ref) {\n  var pid = _ref.pid,\n      blocks = _ref.blocks,\n      err = _ref.err;\n  return __jsx(EditablePage, {\n    id: pid,\n    fetchedBlocks: blocks,\n    err: err,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = IndexPage;\nexport var __N_SSP = true;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/project/notion-clone/pages/index.js"],"names":["EditablePage","IndexPage","pid","blocks","err"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB,C,CAEA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0B;AAAA,MAAvBC,GAAuB,QAAvBA,GAAuB;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC1C,SAAO,MAAC,YAAD;AAAc,IAAA,EAAE,EAAEF,GAAlB;AAAuB,IAAA,aAAa,EAAEC,MAAtC;AAA8C,IAAA,GAAG,EAAEC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;KAAMH,S;;AAkCN,eAAeA,SAAf","sourcesContent":["import EditablePage from \"../components/editablePage\";\n\n// If a user hits \"/\", we create a blank page and redirect to that page\n// so that each user gets his/her personal space to test things\n\nconst IndexPage = ({ pid, blocks, err }) => {\n  return <EditablePage id={pid} fetchedBlocks={blocks} err={err} />;\n};\n\nexport const getServerSideProps = async (context) => {\n  const blocks = [{ tag: \"p\", html: \"\", imageUrl: \"\" }];\n  const res = context.res;\n  const req = context.req;\n  try {\n    const response = await fetch(`${process.env.NEXT_PUBLIC_API}/pages`, {\n      method: \"POST\",\n      credentials: \"include\",\n      // Forward the authentication cookie to the backend\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Cookie: req ? req.headers.cookie : undefined,\n      },\n      body: JSON.stringify({\n        blocks: blocks,\n      }),\n    });\n    const data = await response.json();\n    const pageId = data.pageId;\n    const creator = data.creator;\n    const query = !creator ? \"?public=true\" : \"\"; // needed to show notice\n    res.writeHead(302, { Location: `/p/${pageId}${query}` });\n    res.end();\n    return { props: {} };\n  } catch (err) {\n    console.log(err);\n    return { props: { blocks: null, pid: null, err: true } };\n  }\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}