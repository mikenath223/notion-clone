{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/project/notion-clone/pages/_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from \"next/app\";\nimport cookies from \"next-cookies\";\nimport UserProvider from \"../context/UserContext\";\nimport Layout from \"../components/layout\";\nimport \"typeface-nunito-sans\";\nimport \"typeface-roboto\";\nimport \"../shared/global.scss\";\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      isAuthenticated = _ref.isAuthenticated;\n  return __jsx(UserProvider, {\n    isAuthenticated: isAuthenticated,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }))));\n};\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var isAuthenticated, _cookies, token, appProps;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isAuthenticated = false; // WARNING - We only check if a cookie called token is present\n            // We do not verify the token on the server at this point\n            // In this case, it might be fine since we only need the auth state\n            // for UI purposes. Any sensitive data fetch is secured separately\n\n            _cookies = cookies(context.ctx), token = _cookies.token;\n\n            if (token) {\n              isAuthenticated = true;\n            }\n\n            _context.next = 5;\n            return App.getInitialProps(context);\n\n          case 5:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, appProps), {}, {\n              isAuthenticated: isAuthenticated\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/project/notion-clone/pages/_app.js"],"names":["App","cookies","UserProvider","Layout","MyApp","Component","pageProps","isAuthenticated","getInitialProps","context","ctx","token","appProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,sBAAP;AACA,OAAO,iBAAP;AACA,OAAO,uBAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA+C;AAAA,MAA5CC,SAA4C,QAA5CA,SAA4C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAC3D,SACE,MAAC,YAAD;AAAc,IAAA,eAAe,EAAEA,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CARD;;KAAMF,K;;AAUNA,KAAK,CAACI,eAAN;AAAA,uEAAwB,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBF,YAAAA,eADkB,GACA,KADA,EAGtB;AACA;AACA;AACA;;AANsB,uBAOJN,OAAO,CAACQ,OAAO,CAACC,GAAT,CAPH,EAOdC,KAPc,YAOdA,KAPc;;AAQtB,gBAAIA,KAAJ,EAAW;AACTJ,cAAAA,eAAe,GAAG,IAAlB;AACD;;AAVqB;AAAA,mBAYCP,GAAG,CAACQ,eAAJ,CAAoBC,OAApB,CAZD;;AAAA;AAYhBG,YAAAA,QAZgB;AAAA,6EAaVA,QAbU;AAaAL,cAAAA,eAAe,EAAfA;AAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAgBA,eAAeH,KAAf","sourcesContent":["import App from \"next/app\";\nimport cookies from \"next-cookies\";\n\nimport UserProvider from \"../context/UserContext\";\nimport Layout from \"../components/layout\";\n\nimport \"typeface-nunito-sans\";\nimport \"typeface-roboto\";\nimport \"../shared/global.scss\";\n\nconst MyApp = ({ Component, pageProps, isAuthenticated }) => {\n  return (\n    <UserProvider isAuthenticated={isAuthenticated}>\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </UserProvider>\n  );\n};\n\nMyApp.getInitialProps = async (context) => {\n  let isAuthenticated = false;\n\n  // WARNING - We only check if a cookie called token is present\n  // We do not verify the token on the server at this point\n  // In this case, it might be fine since we only need the auth state\n  // for UI purposes. Any sensitive data fetch is secured separately\n  const { token } = cookies(context.ctx);\n  if (token) {\n    isAuthenticated = true;\n  }\n\n  const appProps = await App.getInitialProps(context);\n  return { ...appProps, isAuthenticated };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}