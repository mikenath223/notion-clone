{"ast":null,"code":"var _jsxFileName = \"/project/notion-clone/components/contextMenu/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport { useOnClickOutside } from \"../../hooks\";\n\nconst contextMenu = ({\n  menuItems,\n  closeAction,\n  isTopNavigation = false\n}) => {\n  const ref = useRef(); // Close the menu if there are any clicks outside the menu\n\n  useOnClickOutside(ref, closeAction);\n  let position = {\n    bottom: \"3rem\",\n    right: \"0\"\n  };\n\n  if (isTopNavigation) {\n    position = {\n      top: \"2rem\",\n      right: \"0\"\n    };\n  }\n\n  return __jsx(\"div\", {\n    ref: ref,\n    className: styles.menuWrapper,\n    style: _objectSpread({}, position),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.menu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, menuItems.map((item, key) => {\n    return __jsx(\"div\", {\n      key: key,\n      className: styles.item,\n      role: \"button\",\n      tabIndex: \"0\",\n      onClick: item.action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, item.label);\n  })));\n};\n\nexport default contextMenu;","map":{"version":3,"sources":["/project/notion-clone/components/contextMenu/index.js"],"names":["useRef","styles","useOnClickOutside","contextMenu","menuItems","closeAction","isTopNavigation","ref","position","bottom","right","top","menuWrapper","menu","map","item","key","action","label"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA,eAAe,GAAG;AAA5C,CAAD,KAAyD;AAC3E,QAAMC,GAAG,GAAGP,MAAM,EAAlB,CAD2E,CAG3E;;AACAE,EAAAA,iBAAiB,CAACK,GAAD,EAAMF,WAAN,CAAjB;AAEA,MAAIG,QAAQ,GAAG;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAf;;AACA,MAAIJ,eAAJ,EAAqB;AACnBE,IAAAA,QAAQ,GAAG;AAAEG,MAAAA,GAAG,EAAE,MAAP;AAAeD,MAAAA,KAAK,EAAE;AAAtB,KAAX;AACD;;AAED,SACE;AAAK,IAAA,GAAG,EAAEH,GAAV;AAAe,IAAA,SAAS,EAAEN,MAAM,CAACW,WAAjC;AAA8C,IAAA,KAAK,oBAAOJ,QAAP,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACY,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACU,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,WACE;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,SAAS,EAAEf,MAAM,CAACc,IAFpB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAC,GAJX;AAKE,MAAA,OAAO,EAAEA,IAAI,CAACE,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGF,IAAI,CAACG,KAPR,CADF;AAWD,GAZA,CADH,CADF,CADF;AAmBD,CA9BD;;AAgCA,eAAef,WAAf","sourcesContent":["import { useRef } from \"react\";\n\nimport styles from \"./styles.module.scss\";\nimport { useOnClickOutside } from \"../../hooks\";\n\nconst contextMenu = ({ menuItems, closeAction, isTopNavigation = false }) => {\n  const ref = useRef();\n\n  // Close the menu if there are any clicks outside the menu\n  useOnClickOutside(ref, closeAction);\n\n  let position = { bottom: \"3rem\", right: \"0\" };\n  if (isTopNavigation) {\n    position = { top: \"2rem\", right: \"0\" };\n  }\n\n  return (\n    <div ref={ref} className={styles.menuWrapper} style={{ ...position }}>\n      <div className={styles.menu}>\n        {menuItems.map((item, key) => {\n          return (\n            <div\n              key={key}\n              className={styles.item}\n              role=\"button\"\n              tabIndex=\"0\"\n              onClick={item.action}\n            >\n              {item.label}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default contextMenu;\n"]},"metadata":{},"sourceType":"module"}